<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- En res/values/styles.xml o themes.xml -->


    <style name="oscuro" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Colores Primarios -->

        <item name="colorPrimary">@color/dark_custom_primary</item>
        <item name="colorPrimaryVariant">@color/dark_custom_primary</item>
        <item name="colorOnPrimary">@color/dark_custom_on_primary</item>

        <!-- Colores Secundarios -->
        <item name="colorSecondary">@color/dark_custom_secondary</item>
        <item name="colorSecondaryVariant">@color/dark_custom_secondary_variant</item>
        <item name="colorOnSecondary">@color/dark_custom_on_secondary</item>

        <!-- Fondos y Superficies -->
        <item name="android:colorBackground">@color/dark_custom_background</item>
        <item name="colorSurface">@color/dark_custom_surface</item>

        <!-- Colores "On" para texto/iconos -->
        <item name="colorOnBackground">@color/dark_custom_on_background</item>
        <item name="colorOnSurface">@color/dark_custom_on_surface</item>
        <item name="colorOutline">@color/dark_custom_outline</item>

        <!-- Color de Error -->
        <item name="colorError">@color/dark_custom_error</item>
        <item name="colorOnError">@color/dark_custom_on_error</item>

        <!-- Color de la Barra de Estado -->
        <!-- Usará colorPrimaryVariant por defecto, que ahora es dark_custom_primary_variant (gris oscuro) -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- O puedes forzarlo a ser igual que el fondo de la Toolbar o la superficie principal: -->
        <!-- <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimary</item> -->
        <!-- <item name="android:statusBarColor" tools:targetApi="l">@color/dark_custom_surface</item> -->

        <item name="popupTheme">@style/MyPopupMenu.Dark</item>

        <item name="cardItemBackgroundSelected">#60FFFFFF</item>
        <item name="cardItemBackgroundDefault">@android:color/transparent</item>

        <!-- Control sobre los iconos de la Barra de Estado (para que sean claros sobre fondo oscuro) -->
        <item name="android:windowLightStatusBar" tools:targetApi="m">false</item>

        <!-- Colores para ActionMode -->
        <item name="windowActionModeOverlay">true</item>
        <item name="android:actionModeBackground">@color/dark_custom_action_mode_background</item>
        <item name="actionModeBackground">@color/dark_custom_action_mode_background</item>



        <!-- Color del texto por defecto en la Toolbar (si usas una Toolbar) -->
        <!-- Los TextAppearances de la Toolbar deberían manejar esto, pero puedes forzarlo -->
        <item name="android:textColorPrimary">?attr/colorOnPrimary</item> <!-- O ?attr/colorOnSurface si la Toolbar usa colorSurface -->
        <item name="navItemIconTint">@color/navigation_item_text_tint_dark</item>
        <item name="navItemTextColor">@color/navigation_item_text_tint_dark</item>
        <!-- Para el color del título de la Toolbar -->
        <item name="toolbarStyle">@style/Widget.App.Toolbar</item>
        <item name="android:textColorSecondary">@color/white</item>
        <item name="alertDialogTheme">@style/MiAlertDialogTheme.Dark</item>
        <item name="iconTint">@color/icon_tint_dark</item>

    </style>

    <style name="Widget.App.Toolbar" parent="Widget.MaterialComponents.Toolbar.PrimarySurface">
        <!-- PrimarySurface hace que la Toolbar use colorSurface para el fondo -->
        <!-- Si quieres que use colorPrimary, usa Widget.MaterialComponents.Toolbar.Primary -->
        <item name="android:background">?attr/colorPrimary</item> -->
        <item name="titleTextColor">?attr/colorOnPrimary</item> -->
        <item name="subtitleTextColor">?attr/colorOnPrimary</item> -->
    </style>
    <!-- En res/values/themes.xml (para temas claros por defecto) -->

</resources>